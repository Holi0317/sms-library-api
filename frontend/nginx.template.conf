user nginx;
worker_processes  auto;
error_log stderr notice;
worker_rlimit_nofile 8192;

events {
  worker_connections  8000;
}

http {
  server_tokens off;

  include mime.types;
  charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;
  default_type  application/octet-stream;

  access_log /dev/stdout;

  sendfile on;
  tcp_nopush on;

  keepalive_timeout  20s;

  gzip on;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
  application/atom+xml
  application/javascript
  application/json
  application/ld+json
  application/manifest+json
  application/rss+xml
  application/vnd.geo+json
  application/vnd.ms-fontobject
  application/x-font-ttf
  application/x-web-app-manifest+json
  application/xhtml+xml
  application/xml
  font/opentype
  image/bmp
  image/svg+xml
  image/x-icon
  text/cache-manifest
  text/css
  text/plain
  text/vcard
  text/vnd.rim.location.xloc
  text/vtt
  text/x-component
  text/x-cross-domain-policy;

  upstream slh_nodejs {
    server %%backend_url%%;
  }

  server {
    listen 80;
    listen [::]:80;
    listen [::]:443 ssl http2;
    listen 443 ssl http2;
    root /srv/static;
    charset utf-8;

    server_name %%server_name%%;

    # SSL settings
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
    ssl_prefer_server_ciphers on;

    ssl_session_cache shared:SSL:10m; # a 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions
    ssl_session_timeout 24h;

    ssl_buffer_size 1400; # 1400 bytes to fit in one MTU

    ssl_session_tickets off;

    keepalive_timeout 300s;

    # Point these to your cert.
    ssl_certificate /etc/nginx/certs/ssl.crt;
    ssl_certificate_key /etc/nginx/certs/ssl.key;

    # Disallow .ht* files
    location ~ /\.ht {
      deny all;
    }

    # Prevent clients from accessing to backup/config/source files
    location ~* (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
      deny all;
    }

    # Turn off favicon.ico and robots.txt warning
    location = /favicon.ico {
      access_log off;
      log_not_found off;
      try_files $uri $uri/ =404;
    }

    location = /robots.txt {
      access_log off;
      log_not_found off;
      try_files $uri $uri/ =404;
    }

    # Serve static file by nginx instead of node.
    location ~* \.(?:js|css|html|htm|html|png|jpg|svg|ttf|woff|woff2)$ {
      expires max;
      try_files $uri $uri/ =404;
    }

    location / {
      proxy_redirect off;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_cache_key sfs$request_uri$scheme;
      proxy_pass http://slh_nodejs;
    }

  }
}